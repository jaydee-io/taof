name: Build on Ubuntu

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  gcc:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build-type: [ Debug, Release ]
        compiler-version: [ 10, 11 ]
    env:
      CC: "gcc-${{matrix.compiler-version}}"
      CXX: "g++-${{matrix.compiler-version}}"

    steps:
      - name: Install ${{env.CXX}}
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update -y
          sudo apt-get install -y libpcap-dev
          sudo apt-get install -y gcc-${{matrix.compiler-version}} g++-${{matrix.compiler-version}}
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -DTAOF_BUILD_TESTS=ON
      - name: Build
        run: cmake --build ${{github.workspace}}/build --parallel
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -V

  clang:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build-type: [ Debug, Release ]
        compiler-version: [ 10, 11, 12, 13, 14, 15, 16 ]
    env:
      CC: "clang-${{matrix.compiler-version}}"
      CXX: "clang++-${{matrix.compiler-version}}"

    steps:
      - name: Install ${{env.CXX}}
        run: |
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)" "llvm.sh" "${{matrix.compiler-version}}"
          sudo apt-get install -y libpcap-dev
          sudo apt-get install -y clang-${{matrix.compiler-version}} libc++1-${{matrix.compiler-version}} libc++abi1-${{matrix.compiler-version}} libc++-${{matrix.compiler-version}}-dev libc++abi-${{matrix.compiler-version}}-dev
          [ ${{matrix.compiler-version}} -ge 12 ] && sudo apt-get install -y libunwind-${{matrix.compiler-version}} libunwind-${{matrix.compiler-version}}-dev || true
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -DCMAKE_CXX_FLAGS="-stdlib=libc++" -DCMAKE_EXE_LINKER_FLAGS="-stdlib=libc++" -DTAOF_BUILD_TESTS=ON
      - name: Build
        run: cmake --build ${{github.workspace}}/build --parallel
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -V
